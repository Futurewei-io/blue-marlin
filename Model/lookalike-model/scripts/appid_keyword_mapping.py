#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
 
#  http://www.apache.org/licenses/LICENSE-2.0.html

#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

from pyspark import SparkContext, SQLContext
from pyspark.sql.types import IntegerType
from pyspark.sql.functions import udf, col, monotonically_increasing_id
from pyspark.sql import HiveContext

'''
This util application is to build keyword table from a dict.
'''

appid_keyword_map = {
    "C100069591": "education",
    "C100203741": "education",
    "C100339817": "education",
    "C100416745": "education",
    "C100448227": "education",
    "C100549105": "education",
    "C100607931": "education",
    "C100727707": "education",
    "C10124262":  "education",
    "C101278993": "education",
    "C101394239": "education",
    "C10197376":  "education",
    "C10331864":  "education",
    "C10584513":  "education",
    "C10686430":  "education",
    "C10775504":  "education",
    "C10500446":  "education",
    "C10183952":  "entertainment",
    "C100296583": "entertainment",
    "C100295409": "entertainment",
    "C10021449":  "entertainment",
    "C10220136":  "entertainment",
    "C30243":     "entertainment",
    "C100705175": "game-act",
    "C10669635":  "game-act",
    "C100004499": "game-avg",
    "C100047513": "game-avg",
    "C100823569": "game-avg",
    "C101530189": "game-avg",
    "C10826978":  "game-avg",
    "C100663793": "game-avg",
    "C100030155": "game-cnc",
    "C100142943": "game-cnc",
    "C100200005": "game-cnc",
    "C100208451": "game-cnc",
    "C100304407": "game-cnc",
    "C100386621": "game-cnc",
    "C100652199": "game-cnc",
    "C101003637": "game-cnc",
    "C10286187":  "game-cnc",
    "C10651731":  "game-cnc",
    "C10730041":  "game-cnc",
    "C10900791":  "game-cnc",
    "C100868031": "game-ent",
    "C100015899": "game-fishing",
    "C100069919": "game-fishing",
    "C100081451": "game-fishing",
    "C100156661": "game-fishing",
    "C100181069": "game-fishing",
    "C100235447": "game-fishing",
    "C100254785": "game-fishing",
    "C100255451": "game-fishing",
    "C100262165": "game-fishing",
    "C100602799": "game-fishing",
    "C100683183": "game-fishing",
    "C100723917": "game-fishing",
    "C100733471": "game-fishing",
    "C100815663": "game-fishing",
    "C101014541": "game-fishing",
    "C101059699": "game-fishing",
    "C101088209": "game-fishing",
    "C101910355": "game-fishing",
    "C10281112":  "game-fishing",
    "C10543580":  "game-fishing",
    "C10653630":  "game-fishing",
    "C10723354":  "game-fishing",
    "C10772011":  "game-fishing",
    "C10783813":  "game-fishing",
    "C100715247": "game-moba",
    "C100869431": "game-moba",
    "C100802181": "game-mon",
    "C100021121": "game-rpg",
    "C100097629": "game-rpg",
    "C100213941": "game-rpg",
    "C100214423": "game-rpg",
    "C100222759": "game-rpg",
    "C100238773": "game-rpg",
    "C100261283": "game-rpg",
    "C100383539": "game-rpg",
    "C100787633": "game-rpg",
    "C100914957": "game-rpg",
    "C100944215": "game-rpg",
    "C100978639": "game-rpg",
    "C101092487": "game-rpg",
    "C101096015": "game-rpg",
    "C101169711": "game-rpg",
    "C101307213": "game-rpg",
    "C101450479": "game-rpg",
    "C101525335": "game-rpg",
    "C101535075": "game-rpg",
    "C101749947": "game-rpg",
    "C10769193":  "game-rpg",
    "C100049087": "game-sim",
    "C100089587": "game-slg",
    "C100240603": "game-slg",
    "C100287947": "game-slg",
    "C100378583": "game-slg",
    "C100513775": "game-slg",
    "C100531297": "game-slg",
    "C100702657": "game-slg",
    "C100868125": "game-slg",
    "C100908793": "game-slg",
    "C101254469": "game-slg",
    "C10150265":  "game-slg",
    "C101701433": "game-slg",
    "C101974431": "game-slg",
    "C10652215":  "game-slg",
    "C10911621":  "game-slg",
    "C100071543": "game-slg",
    "C100100013": "game-slg",
    "C100192853": "health",
    "C10201280":  "health",
    "C6981":      "health",
    "C10444675":  "health",
    "C10047082":  "info",
    "C100507217": "info",
    "C10086820":  "info",
    "C104688":    "info",
    "C10502725":  "info",
    "C10608":     "info",
    "C27936":     "info",
    "C100021901": "info",
    "C100029965": "info",
    "C100487573": "info",
    "C10213975":  "info",
    "C10556446":  "info",
    "C10294981":  "info",
    "C10791829":  "info",
    "C31346":     "info",
    "C10332942":  "info",
    "C10731381":  "info",
    "C19168":     "info",
    "C2022":      "info",
    "C43442":     "info",
    "C57236":     "info",
    "C68367":     "info",
    "C9147":      "info",
    "C10020407":  "info",
    "C10031644":  "info",
    "C10295678":  "info",
    "C1068367":   "info",
    "C10026044":  "info",
    "C10216823":  "living-car",
    "C5206":      "living-food",
    "C10289451":  "living-food",
    "C100270519": "living-house",
    "C100606889": "living-house",
    "C1020820":   "living-house",
    "C10328905":  "living-house",
    "C10748106":  "living-house",
    "C20820":     "living-house",
    "C22553":     "living-house",
    "C100244751": "living-house",
    "C100355227": "living-insurance",
    "C10737057":  "living-makeup",
    "C2212":      "living-map",
    "C3382":      "living-map",
    "C10217244":  "living-mon",
    "C5373":      "living-mon",
    "C100257071": "living-mon",
    "C10213248":  "living-mon",
    "C10308911":  "living-mon",
    "C10230847":  "living-mon",
    "C10250685":  "living-mon",
    "C10401368":  "living-mon",
    "C10101754":  "living-mon",
    "C136900":    "living-mon",
    "C100211271": "living-photo",
    "C10380135":  "living-photo",
    "C10313670":  "other",
    "C101609371": "other",
    "PDB":        "other",
    "RTB":        "other",
    "n/a":        "other",
    "C100147161": "other",
    "C100908433": "other",
    "C10340308":  "other",
    "C100164341": "reading",
    "C100250697": "reading",
    "C100259317": "reading",
    "C100380473": "reading",
    "C100573973": "reading",
    "C101434731": "reading",
    "C10325767":  "reading",
    "C10398894":  "reading",
    "C10420416":  "reading",
    "C10586538":  "reading",
    "C45439":     "reading",
    "C6092":      "reading",
    "C10378558":  "reading",
    "C100613207": "reading",
    "C100813673": "reading",
    "C100863655": "reading",
    "C10136608":  "reading",
    "C10173707":  "reading",
    "C21976":     "reading",
    "C100003155": "shopping",
    "C100340461": "shopping",
    "C10049053":  "shopping",
    "C100525891": "shopping",
    "C10374976":  "shopping",
    "C20252":     "shopping",
    "C34075":     "shopping",
    "C41277":     "shopping",
    "C8618":      "shopping",
    "C10363499":  "shopping",
    "C10666536":  "shopping",
    "C9136":      "shopping",
    "C100709343": "shopping",
    "C10367839":  "shopping",
    "C10175139":  "shopping",
    "C10253000":  "shopping",
    "C10287140":  "shopping",
    "C100716555": "social",
    "C101069595": "social",
    "C7166":      "social",
    "C10224214":  "social",
    "C10199294":  "social",
    "C10285679":  "social",
    "C10183454":  "social",
    "C56900":     "social",
    "C10233297":  "social",
    "C100034711": "social",
    "C10074961":  "social",
    "C10298367":  "social",
    "C100404489": "social",
    "C100473205": "social",
    "C100725191": "social",
    "C37161":     "social",
    "C100324007": "social",
    "C100362171": "social",
    "C101850739": "social",
    "C100206531": "social",
    "C10666860":  "social",
    "C23563":     "social",
    "C101039979": "sports",
    "C10603766":  "sports",
    "C100297585": "travel",
    "C10296824":  "travel",
    "C30591":     "travel",
    "C5157":      "travel",
    "C6006":      "travel",
    "C10063484":  "travel",
    "C184424":    "travel",
    "C10103315":  "travel",
    "C10174030":  "travel",
    "C10203149":  "travel",
    "C12192":     "travel",
    "C91556":     "travel",
    "C262":       "travel",
    "C10397175":  "travel",
    "C101470463": "video",
    "C10503953":  "video",
    "C100173847": "video",
    "C10097595":  "video",
    "C10499309":  "video",
    "C10652857":  "video",
    "C10165939":  "video",
    "C101516707": "video",
    "C10125085":  "video",
    "C101026329": "video",
    "C10505945":  "video",
    "C10521045":  "video",
    "C10393298":  "video",
    "C2002":      "video",
    "C20960":     "video",
    "C52577":     "video",
    "C29156":     "video",
    "C32569":     "video",
    "C10132507":  "video",
    "C100019519": "video",
    "C100122591": "video",
    "C100250095": "video",
    "C100613653": "video",
    "C10110766":  "video",
    "C10181756":  "video",
    "C10439735":  "video",
    "C10560941":  "video",
    "C10615071":  "video",
    "C33455":     "video",
    "C101647955": "video",
    "C10200687":  "video"
}


kw_index_map = dict(zip([u'travel', u'game-avg', u'game-ent', u'reading', u'living-food',
                         u'education', u'living-car', u'shopping', u'living-house', u'game-fishing', u'game-mon', u'other', u'living-map', u'game-act',
                         u'game-slg', u'social', u'living-makeup', u'health', u'game-cnc', u'game-sim', u'video', u'game-rpg', u'living-mon', u'sports',
                         u'living-photo', u'entertainment', u'living-insurance', u'info', u'game-moba'],
                        [28, 4, 6, 24, 16, 1, 15, 25, 17, 7, 9, 23, 20, 3, 12, 26, 19, 13, 5, 11, 29, 10, 21, 27, 22, 2, 18, 14, 8]))


keyword_table_name = 'din_ad_keywords_02182021'

if __name__ == '__main__':
    keyword_rows = []
    for i0, i1 in appid_keyword_map.items():
        keyword_rows.append((i0, i1))

    # transform the keywords to df and save to hive table.
    sc = SparkContext.getOrCreate()
    hive_context = HiveContext(sc)
    df = hive_context.createDataFrame(
        keyword_rows,
        ['spread_app_id', 'keyword']  # add your columns label here
    )
    df_kwi = df.select('keyword').distinct()

    # Either of the following methods can be chosen.
    #df_kwi = df_kwi.withColumn('keyword_index', monotonically_increasing_id())
    df_kwi = df_kwi.withColumn('keyword_index', udf(lambda x: kw_index_map[x], IntegerType())(col('keyword')))

    df = df.join(df_kwi, how='inner', on='keyword')
    df.write.option("header", "true").option("encoding", "UTF-8").mode('overwrite').format('hive').saveAsTable(keyword_table_name)
